This file is a merged representation of the entire codebase, combining all repository files into a single document.
Generated by Repomix on: 2025-01-22T15:27:20.919Z

================================================================
File Summary
================================================================

Purpose:
--------
This file contains a packed representation of the entire repository's contents.
It is designed to be easily consumable by AI systems for analysis, code review,
or other automated processes.

File Format:
------------
The content is organized as follows:
1. This summary section
2. Repository information
3. Directory structure
4. Multiple file entries, each consisting of:
  a. A separator line (================)
  b. The file path (File: path/to/file)
  c. Another separator line
  d. The full contents of the file
  e. A blank line

Usage Guidelines:
-----------------
- This file should be treated as read-only. Any changes should be made to the
  original repository files, not this packed version.
- When processing this file, use the file path to distinguish
  between different files in the repository.
- Be aware that this file may contain sensitive information. Handle it with
  the same level of security as you would the original repository.

Notes:
------
- Some files may have been excluded based on .gitignore rules and Repomix's
  configuration.
- Binary files are not included in this packed representation. Please refer to
  the Repository Structure section for a complete list of file paths, including
  binary files.

Additional Info:
----------------

================================================================
Directory Structure
================================================================
.eslintrc.json
.gitignore
current-globals.txt
current-hero.txt
current-tailwind.txt
next.config.js
package.json
postcss.config.js
public/file.svg
public/globe.svg
public/next.svg
public/vercel.svg
public/window.svg
README.md
src/app/globals.css
src/app/layout.tsx
src/app/MainLayout.tsx
src/app/metadata.ts
src/app/newsletter/loading.tsxmove
src/app/newsletter/page.tsxmove
src/app/page.tsx
src/app/projects/[slug]/loading.tsx
src/app/projects/[slug]/page.tsx
src/app/projects/page.tsx
src/components/3d/CubeScene.tsx
src/components/3d/ThreeBackground.tsx
src/components/3d/ThreeScene.tsx
src/components/home/CaseStudies.tsx
src/components/home/HeroSection/AnimatedBackground.tsx
src/components/home/HeroSection/AnimatedCounter.tsx
src/components/home/HeroSection/ApiIntroduction.tsx
src/components/home/HeroSection/BackgroundElements.tsx
src/components/home/HeroSection/constants.ts
src/components/home/HeroSection/index.tsx
src/components/home/HeroSection/ProfileImage.tsx
src/components/home/HeroSection/SocialLinks.tsx
src/components/home/HeroSection/t.txt
src/components/home/HeroSection/TechStack.tsx
src/components/home/ProjectsGrid.tsx
src/components/home/SkillsMatrix.tsx
src/components/layout/Footer.tsx
src/components/layout/Header.tsx
src/components/layout/NewsletterSidebar.tsx
src/components/shared/ContactForm.tsx
src/components/shared/CustomCursor.tsx
src/components/shared/icons/index.tsx
src/components/shared/NewsletterForm.tsx
src/components/shared/ProjectCard.tsx
src/components/ui/card.tsx
src/components/ui/container.tsx
src/lib/analytics.ts
src/lib/constants.ts
src/lib/newsletter.ts
src/types/index.tsmkdir
src/utils/animations.ts
tailwind.config.ts
tsconfig.json

================================================================
Files
================================================================

================
File: .eslintrc.json
================
{
  "extends": ["next/core-web-vitals", "next/typescript"]
}

================
File: .gitignore
================
# See https://help.github.com/articles/ignoring-files/ for more about ignoring files.

# dependencies
/node_modules
/.pnp
.pnp.*
.yarn/*
!.yarn/patches
!.yarn/plugins
!.yarn/releases
!.yarn/versions

# testing
/coverage

# next.js
/.next/
/out/

# production
/build

# misc
.DS_Store
*.pem

# debug
npm-debug.log*
yarn-debug.log*
yarn-error.log*

# env files (can opt-in for committing if needed)
.env*

# vercel
.vercel

# typescript
*.tsbuildinfo
next-env.d.ts

.vercel

================
File: current-globals.txt
================
@tailwind base;
@tailwind components;
@tailwind utilities;

:root {
  --background: 0 0% 100%;
  --foreground: 222.2 84% 4.9%;
}

@layer base {
  body {
    @apply bg-white text-black;
  }
}

@layer components {
  .neo-brutalist-card {
    @apply bg-white border-[3px] border-black shadow-[8px_8px_0px_0px_rgba(0,0,0,1)]
           transition-all duration-300;
  }

  .neo-brutalist-card:hover {
    @apply translate-x-[3px] translate-y-[3px] shadow-none;
  }

  .neo-brutalist-button {
    @apply bg-black text-white px-6 py-3 font-bold border-2 border-black
           hover:shadow-[4px_4px_0px_0px_rgba(0,0,0,1)]
           hover:-translate-y-0.5 transition-all duration-300;
  }
}

================
File: current-hero.txt
================
'use client'

import { motion } from 'framer-motion'
import Container from '@/components/ui/container'

export default function HeroSection() {
  return (
    <section className="pt-32 pb-16 bg-white">
      <Container>
        <div className="grid grid-cols-1 lg:grid-cols-2 gap-12">
          <motion.div
            initial={{ opacity: 0, y: 20 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.5 }}
            className="space-y-8"
          >
            <div className="inline-block neo-brutalist-card px-4 py-2">
              <span className="text-lg font-mono">Senior Software Engineer</span>
            </div>

            <h1 className="text-6xl sm:text-7xl font-black leading-tight">
              I BUILD
              <br />
              <span className="text-primary">SCALABLE</span>
              <br />
              FUTURES
            </h1>

            <p className="text-xl text-gray-600 max-w-xl">
              Specializing in scalable web solutions and modern architectures
              that help businesses grow.
            </p>

            <motion.div
              initial={{ opacity: 0 }}
              animate={{ opacity: 1 }}
              transition={{ delay: 0.4 }}
            >
              <a href="#projects" className="neo-brutalist-button inline-block">
                View Projects →
              </a>
            </motion.div>
          </motion.div>

          <motion.div
            initial={{ opacity: 0 }}
            animate={{ opacity: 1 }}
            transition={{ delay: 0.2 }}
            className="hidden lg:block"
          >
            <div className="aspect-square relative">
              <div className="absolute inset-0 grid grid-cols-6 gap-4 opacity-10">
                {Array.from({ length: 36 }).map((_, i) => (
                  <div key={i} className="aspect-square border border-black" />
                ))}
              </div>
              <div className="absolute inset-0 neo-brutalist-card" />
            </div>
          </motion.div>
        </div>
      </Container>
    </section>
  )
}

================
File: current-tailwind.txt
================
import type { Config } from "tailwindcss";

const config: Config = {
  content: [
    "./src/pages/**/*.{js,ts,jsx,tsx,mdx}",
    "./src/components/**/*.{js,ts,jsx,tsx,mdx}",
    "./src/app/**/*.{js,ts,jsx,tsx,mdx}",
  ],
  theme: {
    extend: {
      colors: {
        background: "var(--background)",
        foreground: "var(--foreground)",
        primary: "#2563eb", // Blue color for accents
      },
    },
  },
  plugins: [],
};

export default config;

================
File: next.config.js
================
/** @type {import('next').NextConfig} */
const nextConfig = {
  images: {
    domains: ['localhost'],
    unoptimized: true, // Add this line for static exports if needed
  },
}

module.exports = nextConfig

================
File: package.json
================
{
  "name": "bimasha-portfolio",
  "version": "0.1.0",
  "private": true,
  "scripts": {
    "dev": "next dev",
    "build": "next build",
    "start": "next start",
    "lint": "next lint"
  },
  "dependencies": {
    "@geist-ui/core": "^2.3.8",
    "@next/font": "^14.2.15",
    "@react-three/drei": "^9.120.4",
    "@react-three/fiber": "^8.17.10",
    "autoprefixer": "^10.4.20",
    "framer-motion": "^11.15.0",
    "lucide-react": "^0.469.0",
    "next": "14.0.4",
    "react": "^18.2.0",
    "react-dom": "^18.2.0",
    "three": "^0.171.0"
  },
  "devDependencies": {
    "@types/node": "^20",
    "@types/react": "^18",
    "@types/react-dom": "^18",
    "eslint": "^8",
    "eslint-config-next": "14.0.4",
    "postcss": "^8.4.49",
    "tailwindcss": "^3.4.17",
    "typescript": "^5"
  }
}

================
File: postcss.config.js
================
module.exports = {
  plugins: {
    tailwindcss: {},
    autoprefixer: {},
  },
}

================
File: public/file.svg
================
<svg fill="none" viewBox="0 0 16 16" xmlns="http://www.w3.org/2000/svg"><path d="M14.5 13.5V5.41a1 1 0 0 0-.3-.7L9.8.29A1 1 0 0 0 9.08 0H1.5v13.5A2.5 2.5 0 0 0 4 16h8a2.5 2.5 0 0 0 2.5-2.5m-1.5 0v-7H8v-5H3v12a1 1 0 0 0 1 1h8a1 1 0 0 0 1-1M9.5 5V2.12L12.38 5zM5.13 5h-.62v1.25h2.12V5zm-.62 3h7.12v1.25H4.5zm.62 3h-.62v1.25h7.12V11z" clip-rule="evenodd" fill="#666" fill-rule="evenodd"/></svg>

================
File: public/globe.svg
================
<svg fill="none" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16"><g clip-path="url(#a)"><path fill-rule="evenodd" clip-rule="evenodd" d="M10.27 14.1a6.5 6.5 0 0 0 3.67-3.45q-1.24.21-2.7.34-.31 1.83-.97 3.1M8 16A8 8 0 1 0 8 0a8 8 0 0 0 0 16m.48-1.52a7 7 0 0 1-.96 0H7.5a4 4 0 0 1-.84-1.32q-.38-.89-.63-2.08a40 40 0 0 0 3.92 0q-.25 1.2-.63 2.08a4 4 0 0 1-.84 1.31zm2.94-4.76q1.66-.15 2.95-.43a7 7 0 0 0 0-2.58q-1.3-.27-2.95-.43a18 18 0 0 1 0 3.44m-1.27-3.54a17 17 0 0 1 0 3.64 39 39 0 0 1-4.3 0 17 17 0 0 1 0-3.64 39 39 0 0 1 4.3 0m1.1-1.17q1.45.13 2.69.34a6.5 6.5 0 0 0-3.67-3.44q.65 1.26.98 3.1M8.48 1.5l.01.02q.41.37.84 1.31.38.89.63 2.08a40 40 0 0 0-3.92 0q.25-1.2.63-2.08a4 4 0 0 1 .85-1.32 7 7 0 0 1 .96 0m-2.75.4a6.5 6.5 0 0 0-3.67 3.44 29 29 0 0 1 2.7-.34q.31-1.83.97-3.1M4.58 6.28q-1.66.16-2.95.43a7 7 0 0 0 0 2.58q1.3.27 2.95.43a18 18 0 0 1 0-3.44m.17 4.71q-1.45-.12-2.69-.34a6.5 6.5 0 0 0 3.67 3.44q-.65-1.27-.98-3.1" fill="#666"/></g><defs><clipPath id="a"><path fill="#fff" d="M0 0h16v16H0z"/></clipPath></defs></svg>

================
File: public/next.svg
================
<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 394 80"><path fill="#000" d="M262 0h68.5v12.7h-27.2v66.6h-13.6V12.7H262V0ZM149 0v12.7H94v20.4h44.3v12.6H94v21h55v12.6H80.5V0h68.7zm34.3 0h-17.8l63.8 79.4h17.9l-32-39.7 32-39.6h-17.9l-23 28.6-23-28.6zm18.3 56.7-9-11-27.1 33.7h17.8l18.3-22.7z"/><path fill="#000" d="M81 79.3 17 0H0v79.3h13.6V17l50.2 62.3H81Zm252.6-.4c-1 0-1.8-.4-2.5-1s-1.1-1.6-1.1-2.6.3-1.8 1-2.5 1.6-1 2.6-1 1.8.3 2.5 1a3.4 3.4 0 0 1 .6 4.3 3.7 3.7 0 0 1-3 1.8zm23.2-33.5h6v23.3c0 2.1-.4 4-1.3 5.5a9.1 9.1 0 0 1-3.8 3.5c-1.6.8-3.5 1.3-5.7 1.3-2 0-3.7-.4-5.3-1s-2.8-1.8-3.7-3.2c-.9-1.3-1.4-3-1.4-5h6c.1.8.3 1.6.7 2.2s1 1.2 1.6 1.5c.7.4 1.5.5 2.4.5 1 0 1.8-.2 2.4-.6a4 4 0 0 0 1.6-1.8c.3-.8.5-1.8.5-3V45.5zm30.9 9.1a4.4 4.4 0 0 0-2-3.3 7.5 7.5 0 0 0-4.3-1.1c-1.3 0-2.4.2-3.3.5-.9.4-1.6 1-2 1.6a3.5 3.5 0 0 0-.3 4c.3.5.7.9 1.3 1.2l1.8 1 2 .5 3.2.8c1.3.3 2.5.7 3.7 1.2a13 13 0 0 1 3.2 1.8 8.1 8.1 0 0 1 3 6.5c0 2-.5 3.7-1.5 5.1a10 10 0 0 1-4.4 3.5c-1.8.8-4.1 1.2-6.8 1.2-2.6 0-4.9-.4-6.8-1.2-2-.8-3.4-2-4.5-3.5a10 10 0 0 1-1.7-5.6h6a5 5 0 0 0 3.5 4.6c1 .4 2.2.6 3.4.6 1.3 0 2.5-.2 3.5-.6 1-.4 1.8-1 2.4-1.7a4 4 0 0 0 .8-2.4c0-.9-.2-1.6-.7-2.2a11 11 0 0 0-2.1-1.4l-3.2-1-3.8-1c-2.8-.7-5-1.7-6.6-3.2a7.2 7.2 0 0 1-2.4-5.7 8 8 0 0 1 1.7-5 10 10 0 0 1 4.3-3.5c2-.8 4-1.2 6.4-1.2 2.3 0 4.4.4 6.2 1.2 1.8.8 3.2 2 4.3 3.4 1 1.4 1.5 3 1.5 5h-5.8z"/></svg>

================
File: public/vercel.svg
================
<svg fill="none" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1155 1000"><path d="m577.3 0 577.4 1000H0z" fill="#fff"/></svg>

================
File: public/window.svg
================
<svg fill="none" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16"><path fill-rule="evenodd" clip-rule="evenodd" d="M1.5 2.5h13v10a1 1 0 0 1-1 1h-11a1 1 0 0 1-1-1zM0 1h16v11.5a2.5 2.5 0 0 1-2.5 2.5h-11A2.5 2.5 0 0 1 0 12.5zm3.75 4.5a.75.75 0 1 0 0-1.5.75.75 0 0 0 0 1.5M7 4.75a.75.75 0 1 1-1.5 0 .75.75 0 0 1 1.5 0m1.75.75a.75.75 0 1 0 0-1.5.75.75 0 0 0 0 1.5" fill="#666"/></svg>

================
File: README.md
================
This is a [Next.js](https://nextjs.org) project bootstrapped with [`create-next-app`](https://nextjs.org/docs/app/api-reference/cli/create-next-app).

## Getting Started

First, run the development server:

```bash
npm run dev
# or
yarn dev
# or
pnpm dev
# or
bun dev
```

Open [http://localhost:3000](http://localhost:3000) with your browser to see the result.

You can start editing the page by modifying `app/page.tsx`. The page auto-updates as you edit the file.

This project uses [`next/font`](https://nextjs.org/docs/app/building-your-application/optimizing/fonts) to automatically optimize and load [Geist](https://vercel.com/font), a new font family for Vercel.

## Learn More

To learn more about Next.js, take a look at the following resources:

- [Next.js Documentation](https://nextjs.org/docs) - learn about Next.js features and API.
- [Learn Next.js](https://nextjs.org/learn) - an interactive Next.js tutorial.

You can check out [the Next.js GitHub repository](https://github.com/vercel/next.js) - your feedback and contributions are welcome!

## Deploy on Vercel

The easiest way to deploy your Next.js app is to use the [Vercel Platform](https://vercel.com/new?utm_medium=default-template&filter=next.js&utm_source=create-next-app&utm_campaign=create-next-app-readme) from the creators of Next.js.

Check out our [Next.js deployment documentation](https://nextjs.org/docs/app/building-your-application/deploying) for more details.
"# bimasha-portfolio"

================
File: src/app/globals.css
================
@tailwind base;
@tailwind components;
@tailwind utilities;

:root {
  --background: 0 0% 100%;
  --foreground: 222.2 84% 4.9%;
}

@layer base {
  body {
    @apply bg-background text-secondary;
  }
}

@layer components {
  .neo-brutalist-card {
    @apply bg-white border-[3px] border-secondary shadow-[8px_8px_0px_0px_rgba(37,42,52,1)]
           transition-all duration-300;
  }

  .neo-brutalist-card:hover {
    @apply translate-x-[3px] translate-y-[3px] shadow-none;
  }

  .neo-brutalist-button {
    @apply bg-primary text-white px-6 py-3 font-bold border-2 border-secondary
           hover:shadow-[4px_4px_0px_0px_rgba(37,42,52,1)]
           hover:-translate-y-0.5 transition-all duration-300;
  }
}

/* Add these rules to hide default cursors */
* {
  cursor: none !important;
}

/* Optional: Hide cursor completely on touch devices */
@media (hover: none) {
  * {
    cursor: auto !important;
  }
  #custom-cursor {
    display: none;
  }
}

================
File: src/app/layout.tsx
================
import type { Metadata } from 'next'
import './globals.css'
import Header from '@/components/layout/Header'
import Footer from '@/components/layout/Footer'
import CustomCursor from '@/components/shared/CustomCursor'

export const metadata: Metadata = {
  title: 'Bimasha | Senior Software Engineer',
  description: 'Senior Software Engineer specializing in scalable web solutions',
}

export default function RootLayout({
  children,
}: {
  children: React.ReactNode
}) {
  return (
    <html lang="en">
      <body className="min-h-screen flex flex-col bg-white cursor-none">
        <CustomCursor />
        <Header />
        <main className="flex-grow pt-20">
          {children}
        </main>
        <Footer />
      </body>
    </html>
  )
}

================
File: src/app/MainLayout.tsx
================
'use client'

export default function MainLayout({
  children,
}: {
  children: React.ReactNode
}) {
  return (
    <html lang="en">
      <body className="min-h-screen bg-background">{children}</body>
    </html>
  )
}

================
File: src/app/metadata.ts
================
import { Metadata } from 'next'

export const sharedMetadata: Metadata = {
  title: {
    default: 'Bimasha Portfolio',
    template: '%s | Bimasha Portfolio'
  },
  description: 'Senior Software Engineer Portfolio showcasing projects and expertise',
  keywords: ['software engineer', 'full-stack', 'portfolio', 'projects'],
}

================
File: src/app/newsletter/loading.tsxmove
================
src\components\shared\HeroSection.tsx src\components\home\

================
File: src/app/newsletter/page.tsxmove
================
src\components\HeroSection.tsx src\components\home\

================
File: src/app/page.tsx
================
import HeroSection from '@/components/home/HeroSection'  // Changed from '@/components/home/HeroSection.tsx'
import ProjectsGrid from '@/components/home/ProjectsGrid'
import SkillsMatrix from '@/components/home/SkillsMatrix'
import CaseStudies from '@/components/home/CaseStudies'

export default function Home() {
  return (
    <main className="min-h-screen">
      <HeroSection />
      <ProjectsGrid />
      <SkillsMatrix />
      <CaseStudies />
    </main>
  )
}

================
File: src/app/projects/[slug]/loading.tsx
================
export default function Loading() {
    return <div className="loading-spinner" />
  }
  
  // src/app/newsletter/page.tsx
  export default function Newsletter() {
    return (
      <div className="newsletter-page">
        {/* Newsletter Form Component */}
      </div>
    )
  }

================
File: src/app/projects/[slug]/page.tsx
================
export default function ProjectDetail({ 
    params 
  }: { 
    params: { slug: string } 
  }) {
    return (
      <div className="project-detail">
        {/* Project Detail Component */}
      </div>
    )
  }

================
File: src/app/projects/page.tsx
================
export default function Projects() {
    return (
      <div className="projects-page">
        {/* Projects List Component */}
      </div>
    )
  }

================
File: src/components/3d/CubeScene.tsx
================
'use client'

import { Canvas } from '@react-three/fiber'
import { OrbitControls } from '@react-three/drei'

function Cube() {
  return (
    <mesh rotation={[0.5, 0.5, 0]}>
      <boxGeometry args={[2.5, 2.5, 2.5]} />
      <meshStandardMaterial color="#2563eb" wireframe />
    </mesh>
  )
}

export default function CubeScene() {
  return (
    <div className="w-full h-full">
      <Canvas>
        <ambientLight intensity={0.5} />
        <pointLight position={[10, 10, 10]} />
        <OrbitControls enableZoom={false} />
        <Cube />
      </Canvas>
    </div>
  )
}

================
File: src/components/3d/ThreeBackground.tsx
================
'use client'

import { Canvas } from '@react-three/fiber'
import { useEffect, useState } from 'react'
import { Vector3 } from 'three'
import ThreeScene from './ThreeScene'

export default function ThreeBackground() {
  const [mousePosition, setMousePosition] = useState<Vector3>(new Vector3(0, 0, 0))

  useEffect(() => {
    const handleMouseMove = (event: MouseEvent) => {
      const x = (event.clientX / window.innerWidth) * 2 - 1
      const y = -(event.clientY / window.innerHeight) * 2 + 1
      setMousePosition(new Vector3(x, y, 0))
    }

    window.addEventListener('mousemove', handleMouseMove)
    return () => window.removeEventListener('mousemove', handleMouseMove)
  }, [])

  return (
    <div className="fixed inset-0 -z-10">
      <Canvas>
        <ThreeScene mousePosition={mousePosition} />
      </Canvas>
    </div>
  )
}

================
File: src/components/3d/ThreeScene.tsx
================
'use client'

import { useRef } from 'react'
import { useFrame } from '@react-three/fiber'
import { Vector3 } from 'three'

interface ThreeSceneProps {
  mousePosition: Vector3
}

export default function ThreeScene({ mousePosition }: ThreeSceneProps) {
  const meshRef = useRef<THREE.Mesh>(null)

  useFrame(({ clock }) => {
    if (meshRef.current) {
      meshRef.current.rotation.x = Math.sin(clock.getElapsedTime()) * 0.2
      meshRef.current.rotation.y = Math.cos(clock.getElapsedTime()) * 0.2
    }
  })

  return (
    <>
      <ambientLight intensity={0.5} />
      <pointLight position={[10, 10, 10]} />
      <mesh ref={meshRef}>
        <boxGeometry args={[1, 1, 1]} />
        <meshStandardMaterial color="#6366f1" />
      </mesh>
    </>
  )
}

================
File: src/components/home/CaseStudies.tsx
================
'use client'

import { motion } from 'framer-motion'
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card'

interface CaseStudy {
  title: string
  description: string
  metrics: string[]
  slug: string
  date: string
}

const caseStudies: CaseStudy[] = [
  {
    title: 'Scaling Microservices Architecture',
    description: 'How we improved system performance by 300%',
    metrics: ['300% performance increase', '50% cost reduction', '99.99% uptime'],
    slug: 'scaling-microservices',
    date: '2024-01'
  }
]

export default function CaseStudies() {
  return (
    <section className="py-20 bg-secondary/20">
      <div className="max-w-6xl mx-auto px-4">
        <h2 className="text-4xl font-bold mb-12">Case Studies</h2>
        <div className="grid gap-8 md:grid-cols-2">
          {caseStudies.map((study, index) => (
            <motion.div
              key={study.slug}
              initial={{ opacity: 0, y: 20 }}
              animate={{ opacity: 1, y: 0 }}
              transition={{ delay: index * 0.1 }}
            >
              <Card>
                <CardHeader>
                  <CardTitle>{study.title}</CardTitle>
                  <CardDescription>{study.date}</CardDescription>
                </CardHeader>
                <CardContent>
                  <p className="mb-4">{study.description}</p>
                  <ul className="space-y-2">
                    {study.metrics.map((metric, idx) => (
                      <li key={idx} className="text-sm text-muted-foreground">
                        {metric}
                      </li>
                    ))}
                  </ul>
                </CardContent>
              </Card>
            </motion.div>
          ))}
        </div>
      </div>
    </section>
  )
}

================
File: src/components/home/HeroSection/AnimatedBackground.tsx
================
'use client'

import { motion } from 'framer-motion'

const codeSnippets = [
  'const future = await buildScalableSolution();',
  'export class Innovation implements Success',
  'function optimizePerformance(): Promise<Result>',
  'interface ScalableSolution extends Reliable',
  'type Experience = Expertise & Innovation;'
]

export default function AnimatedBackground() {
  return (
    <div className="absolute inset-0 overflow-hidden pointer-events-none opacity-[0.02]">
      {codeSnippets.map((snippet, i) => (
        <motion.div
          key={i}
          initial={{ opacity: 0, x: -20 }}
          animate={{ 
            opacity: [0, 1, 1, 0],
            x: [-20, 0, 0, 20]
          }}
          transition={{
            duration: 10,
            delay: i * 2,
            repeat: Infinity,
            repeatDelay: codeSnippets.length * 2
          }}
          className={`absolute font-mono text-sm ${
            i % 2 === 0 ? 'left-1/4' : 'right-1/4'
          } ${
            i % 3 === 0 ? 'top-1/4' : i % 3 === 1 ? 'top-1/2' : 'top-3/4'
          }`}
        >
          {snippet}
        </motion.div>
      ))}
    </div>
  )
}

================
File: src/components/home/HeroSection/AnimatedCounter.tsx
================
'use client'

import { motion, useMotionValue, useTransform, animate } from 'framer-motion'
import { useEffect, useState } from 'react'

export default function AnimatedCounter() {
  const [isAnimationComplete, setIsAnimationComplete] = useState(false)
  const count = useMotionValue(0)
  const rounded = useTransform(count, latest => Math.round(latest))

  useEffect(() => {
    const animation = animate(count, 10, {
      duration: 1,
      onComplete: () => {
        setIsAnimationComplete(true)
      },
    })

    return animation.stop
  }, [count])

  return (
    <div className="inline-block relative group">
      {/* Background with gradient */}
      <div className="absolute inset-0 bg-gradient-to-r from-blue-500 via-purple-500 to-pink-500 
                    opacity-0 group-hover:opacity-100 transition-opacity duration-500" />
      
      {/* Main content */}
      <div className="relative bg-white border-[3px] border-black 
                    shadow-[4px_4px_0px_0px_rgba(0,0,0,1)] 
                    hover:shadow-none hover:translate-x-[3px] hover:translate-y-[3px]
                    transition-all duration-300 px-4 py-2
                    bg-gradient-to-r from-[#FF6B6B] to-[#4ECDC4]">
        <span className="font-mono text-white mix-blend-overlay">
          <motion.span>{rounded}</motion.span>
          {isAnimationComplete && '+'} Years of Experience
        </span>
      </div>
    </div>
  )
}

================
File: src/components/home/HeroSection/ApiIntroduction.tsx
================
'use client'

import { motion } from 'framer-motion'
import { apiResponse } from './constants'

export default function ApiIntroduction() {
  return (
    <motion.div 
      initial={{ opacity: 0, y: 20 }}
      animate={{ opacity: 1, y: 0 }}
      transition={{ duration: 0.5 }}
      className="font-mono text-sm bg-gray-50 p-4 rounded-lg border-2 border-black 
                shadow-[4px_4px_0px_0px_rgba(0,0,0,1)] overflow-hidden relative
                group hover:shadow-[6px_6px_0px_0px_rgba(0,0,0,1)] 
                transition-all duration-300"
    >
      {/* Terminal Bar */}
      <div className="absolute top-0 left-0 right-0 h-6 bg-black flex items-center px-2 gap-1">
        <div className="w-2 h-2 rounded-full bg-red-500" />
        <div className="w-2 h-2 rounded-full bg-yellow-500" />
        <div className="w-2 h-2 rounded-full bg-green-500" />
        <span className="text-white text-xs ml-2">api.bimasha.dev</span>
      </div>
      
      <div className="mt-6 space-y-2">
        <motion.div
          initial={{ opacity: 0 }}
          animate={{ opacity: 1 }}
          transition={{ delay: 0.2 }}
        >
          <span className="text-purple-600">fetch</span>
          <span className="text-gray-600">(</span>
          <span className="text-green-600">'https://api.bimasha.dev/info'</span>
          <span className="text-gray-600">)</span>
        </motion.div>
        
        <motion.div
          initial={{ opacity: 0 }}
          animate={{ opacity: 1 }}
          transition={{ delay: 0.4 }}
          className="text-gray-500"
        >
          .then(response => response.json())
        </motion.div>

        <motion.div
          initial={{ opacity: 0 }}
          animate={{ opacity: 1 }}
          transition={{ delay: 0.6 }}
          className="bg-gray-100 p-3 rounded-md"
        >
          <span className="text-gray-400">// Response</span>
          <div className="space-y-1">
            <div>{"{"}</div>
            <div className="ml-4">
              "name": <span className="text-green-600">"{apiResponse.dev.name}"</span>,
            </div>
            <div className="ml-4">
              "role": <span className="text-green-600">"{apiResponse.dev.role}"</span>,
            </div>
            <div className="ml-4">
              "status": <span className="text-orange-600">{apiResponse.dev.status}</span>,
            </div>
            <div className="ml-4">
              "message": <span className="text-green-600">"{apiResponse.dev.message}"</span>
            </div>
            <div>{"}"}</div>
          </div>
        </motion.div>
      </div>

      {/* Status Badge */}
      <motion.div 
        initial={{ opacity: 0, x: 20 }}
        animate={{ opacity: 1, x: 0 }}
        transition={{ delay: 0.8 }}
        className="absolute top-8 right-4 px-2 py-0.5 bg-green-100 text-green-800 
                   text-xs rounded-full border border-green-300"
      >
        200 OK
      </motion.div>
    </motion.div>
  )
}

================
File: src/components/home/HeroSection/BackgroundElements.tsx
================
'use client'

import { motion } from 'framer-motion'

export default function BackgroundElements() {
  return (
    <div className="absolute inset-0 pointer-events-none" style={{ zIndex: -1 }}>
      {/* Code-like elements */}
      <div className="absolute right-10 top-20 font-mono text-gray-200 text-6xl opacity-20">{'{ }'}</div>
      <div className="absolute left-10 bottom-20 font-mono text-gray-200 text-4xl opacity-20">{'</>'}</div>
      
      {/* Geometric shapes */}
      <div className="absolute top-20 right-40 w-24 h-24 border-[3px] border-blue-100 rotate-45" />
      <div className="absolute bottom-20 left-20 w-32 h-32 border-[3px] border-gray-100" />
      <div className="absolute top-40 left-40 w-16 h-16 bg-blue-100/20" />
      
      {/* Dots pattern */}
      <div className="absolute right-24 top-1/3 grid grid-cols-3 gap-2 opacity-20">
        {[...Array(9)].map((_, i) => (
          <div key={i} className="w-2 h-2 rounded-full bg-gray-300" />
        ))}
      </div>
      
      {/* Tech-inspired elements */}
      <div className="absolute left-1/4 top-20 text-gray-200 opacity-20 text-sm font-mono">
        {"function() { }"}
      </div>
      <div className="absolute right-1/3 bottom-32 text-gray-200 opacity-20 text-sm font-mono">
        {"<div/>"}
      </div>
      
      {/* Animated circles */}
      <motion.div
        className="absolute left-20 top-1/4 w-12 h-12 rounded-full border-2 border-gray-100 opacity-20"
        animate={{
          rotate: 360,
          scale: [1, 1.1, 1],
        }}
        transition={{
          duration: 8,
          repeat: Infinity,
          ease: "linear"
        }}
      />
      
      {/* Gradient blob */}
      <div className="absolute right-1/4 top-1/3 w-64 h-64 rounded-full bg-gradient-to-r from-blue-50 to-purple-50 opacity-30 blur-3xl" />
      
      {/* Lines */}
      <div className="absolute left-1/3 top-0 w-px h-32 bg-gradient-to-b from-transparent via-gray-200 to-transparent opacity-20" />
      <div className="absolute right-1/4 bottom-0 w-px h-40 bg-gradient-to-b from-transparent via-gray-200 to-transparent opacity-20" />
      
      {/* Small decorative elements */}
      <motion.div
        className="absolute right-40 bottom-40 text-2xl opacity-20"
        animate={{ rotate: [0, 90, 180, 270, 360] }}
        transition={{ duration: 10, repeat: Infinity, ease: "linear" }}
      >
        ⚡
      </motion.div>
      
      {/* Code-inspired floating elements */}
      <motion.div
        className="absolute left-1/3 bottom-20 text-gray-200 opacity-20 font-mono"
        animate={{ y: [-10, 10, -10] }}
        transition={{ duration: 4, repeat: Infinity, ease: "easeInOut" }}
      >
        {"import { future } from 'tech'"}
      </motion.div>
    </div>
  )
}

================
File: src/components/home/HeroSection/constants.ts
================
export const apiResponse = {
    dev: {
      name: "Bimasha Zaman",
      role: "Full-Stack Software Architect",
      status: 200,
      message: "Ready to Build Your Next Project"
    }
  }
  
  export const techStack = [
    { 
      name: 'Laravel',
      color: '#FF2D20',
      icon: '🔸',
      years: 6,
      bgColor: '#FFF5F5',
      primary: true
    },
    { 
      name: 'Next.js',
      color: '#000000',
      icon: '▲',
      years: 3,
      bgColor: '#F8F9FA',
      primary: true
    },
    { 
      name: 'React',
      color: '#61DAFB',
      icon: '⚛️',
      years: 5,
      bgColor: '#F0FBFF',
      primary: true
    },
    { 
      name: 'TypeScript',
      color: '#3178C6',
      icon: '📘',
      years: 4,
      bgColor: '#EDF2FF'
    },
    { 
      name: 'Node.js',
      color: '#339933',
      icon: '🟢',
      years: 5,
      bgColor: '#F0FFF4'
    },
    { 
      name: 'AWS',
      color: '#FF9900',
      icon: '☁️',
      years: 4,
      bgColor: '#FFFAF0'
    }
  ]

================
File: src/components/home/HeroSection/index.tsx
================
'use client'

import { motion } from 'framer-motion'
import Container from '@/components/ui/container'
import TechStack from './TechStack'
import ProfileImage from './ProfileImage'
import SocialLinks from './SocialLinks'
import BackgroundElements from './BackgroundElements'
import ApiIntroduction from './ApiIntroduction'
import AnimatedCounter from './AnimatedCounter'

export default function HeroSection() {
  return (
    <section className="pt-16 pb-16 relative overflow-hidden">
      <BackgroundElements />
      
      <Container>
        <div className="grid grid-cols-1 lg:grid-cols-2 gap-8 items-start">
          <motion.div
            initial={{ opacity: 0, y: 20 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.5 }}
            className="space-y-5"
          >
            {/* API Introduction Component */}
            <ApiIntroduction />

            {/* Experience Counter & Status */}
            <div className="space-y-4">
              <div className="flex items-center flex-wrap gap-3">
                <AnimatedCounter />
                <div className="flex items-center gap-2">
                  <span className="inline-block w-2 h-2 bg-green-500 rounded-full animate-pulse" />
                  <span className="text-sm text-gray-600">Available for Remote Work</span>
                </div>
              </div>

              {/* Description */}
              <p className="text-lg text-gray-600 max-w-xl">
                Building scalable solutions that drive business growth, with expertise in{' '}
                <span className="text-blue-600 font-semibold">FinTech</span>,{' '}
                <span className="text-blue-600 font-semibold">SaaS</span>, and{' '}
                <span className="text-blue-600 font-semibold">E-commerce</span>.
              </p>
            </div>

            {/* Achievements */}
            <div className="flex flex-wrap gap-3 text-sm text-gray-600">
              <div className="flex items-center gap-2">
                <span className="w-1.5 h-1.5 bg-blue-600 rounded-full" />
                <span>15+ Custom Applications</span>
              </div>
              <div className="flex items-center gap-2">
                <span className="w-1.5 h-1.5 bg-blue-600 rounded-full" />
                <span>Global Client Portfolio</span>
              </div>
              <div className="flex items-center gap-2">
                <span className="w-1.5 h-1.5 bg-blue-600 rounded-full" />
                <span>Team Leadership</span>
              </div>
            </div>

            {/* CTAs and Tech Stack */}
            <div className="space-y-4">
              <div className="flex flex-wrap items-center gap-4">
                <motion.div
                  initial={{ opacity: 0 }}
                  animate={{ opacity: 1 }}
                  transition={{ delay: 1 }}
                  whileHover={{ scale: 1.05 }}
                >
                  <a 
                    href="#projects" 
                    className="inline-block bg-black text-white px-6 py-3 font-bold 
                             border-[3px] border-black shadow-[4px_4px_0px_0px_rgba(0,0,0,1)]
                             hover:translate-x-[3px] hover:translate-y-[3px] hover:shadow-none
                             transition-all"
                  >
                    Explore Projects →
                  </a>
                </motion.div>
                <SocialLinks />
              </div>

              <TechStack />
            </div>
          </motion.div>

          {/* Profile Image Column */}
          <div className="lg:sticky lg:top-20">
            <ProfileImage />
          </div>
        </div>
      </Container>
    </section>
  )
}

================
File: src/components/home/HeroSection/ProfileImage.tsx
================
'use client'

import { motion } from 'framer-motion'
import Image from 'next/image'

export default function ProfileImage() {
  return (
    <motion.div
      initial={{ opacity: 0 }}
      animate={{ opacity: 1 }}
      transition={{ delay: 0.2 }}
      className="hidden lg:block relative w-[400px] h-[400px] justify-self-center"
    >
      {/* Decorative background elements */}
      <div className="absolute -right-4 top-4 w-full h-full border-[3px] border-black opacity-10" />
      <div className="absolute -right-8 top-8 w-full h-full border-[3px] border-black opacity-5" />

      {/* Main image container */}
      <motion.div
        className="relative w-full h-full bg-white"
        whileHover={{ scale: 1.02 }}
        transition={{ 
          type: "spring",
          stiffness: 300,
          damping: 20
        }}
      >
        {/* Border frame */}
        <div className="absolute inset-0 border-[3px] border-black">
          {/* Terminal-like top bar */}
          <div className="absolute top-0 left-0 right-0 h-6 bg-black flex items-center px-3 gap-1">
            <div className="w-2 h-2 rounded-full bg-red-500" />
            <div className="w-2 h-2 rounded-full bg-yellow-500" />
            <div className="w-2 h-2 rounded-full bg-green-500" />
            <span className="text-white text-[10px] ml-2 opacity-60 font-mono">viewing: bimasha.jpg</span>
          </div>
        </div>

        {/* Image */}
        <div className="relative w-full h-full">
          <Image
            src="/images/bimasha.jpg"
            alt="Bimasha - Senior Software Engineer"
            fill
            priority
            className="object-cover"
            sizes="(max-width: 768px) 100vw, 400px"
          />
          {/* Status badge */}
          <div className="absolute bottom-4 right-4 bg-black text-white px-3 py-1 
                       font-mono text-sm shadow-lg border-2 border-black
                       flex items-center gap-2">
            <span className="w-2 h-2 bg-green-500 rounded-full animate-pulse" />
            <span>Open to Work</span>
          </div>

          {/* Image size indicator */}
          <div className="absolute top-8 left-3 px-2 py-1 bg-black/80 text-white 
                       font-mono text-[10px] rounded">
            400 x 400
          </div>

          {/* File info */}
          <div className="absolute top-8 right-3 px-2 py-1 bg-black/80 text-white 
                       font-mono text-[10px] rounded flex items-center gap-1">
            <span className="w-1 h-1 bg-blue-400 rounded-full" />
            JPG
          </div>
        </div>
      </motion.div>
    </motion.div>
  )
}

================
File: src/components/home/HeroSection/SocialLinks.tsx
================
'use client'

import { motion } from 'framer-motion'
import { socialLinks } from './constants'

const GithubIcon = () => (
  <svg viewBox="0 0 24 24" width="20" height="20" stroke="currentColor" fill="none" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round">
    <path d="M9 19c-5 1.5-5-2.5-7-3m14 6v-3.87a3.37 3.37 0 0 0-.94-2.61c3.14-.35 6.44-1.54 6.44-7A5.44 5.44 0 0 0 20 4.77 5.07 5.07 0 0 0 19.91 1S18.73.65 16 2.48a13.38 13.38 0 0 0-7 0C6.27.65 5.09 1 5.09 1A5.07 5.07 0 0 0 5 4.77a5.44 5.44 0 0 0-1.5 3.78c0 5.42 3.3 6.61 6.44 7A3.37 3.37 0 0 0 9 18.13V22"></path>
  </svg>
)

const LinkedinIcon = () => (
  <svg viewBox="0 0 24 24" width="20" height="20" stroke="currentColor" fill="none" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round">
    <path d="M16 8a6 6 0 0 1 6 6v7h-4v-7a2 2 0 0 0-2-2 2 2 0 0 0-2 2v7h-4v-7a6 6 0 0 1 6-6z"></path>
    <rect x="2" y="9" width="4" height="12"></rect>
    <circle cx="4" cy="4" r="2"></circle>
  </svg>
)

export default function SocialLinks() {
  return (
    <div className="flex items-center gap-3">
      <motion.a 
        href="https://github.com/bimashazaman"
        target="_blank"
        rel="noopener noreferrer"
        className="relative p-2 rounded-full group"
        whileHover={{ scale: 1.05 }}
        transition={{ type: "spring", stiffness: 400, damping: 17 }}
      >
        {/* Background glow effect */}
        <div className="absolute inset-0 rounded-full bg-gradient-to-r from-[#333] to-[#666] opacity-0 
                      group-hover:opacity-20 blur-md transition-opacity duration-300" />
        
        {/* Border container */}
        <div className="relative p-2 rounded-full border-2 border-gray-200 
                      overflow-hidden transition-colors duration-300
                      group-hover:border-[#333] bg-white">
          <GithubIcon />
          
          {/* Inner glow effect */}
          <div className="absolute inset-0 bg-gradient-to-r from-[#333] to-[#666] opacity-0 
                        group-hover:opacity-10 transition-opacity duration-300" />
        </div>
      </motion.a>

      <motion.a 
        href="https://www.linkedin.com/in/bimasha-zaman/"
        target="_blank"
        rel="noopener noreferrer"
        className="relative p-2 rounded-full group"
        whileHover={{ scale: 1.05 }}
        transition={{ type: "spring", stiffness: 400, damping: 17 }}
      >
        {/* Background glow effect */}
        <div className="absolute inset-0 rounded-full bg-gradient-to-r from-[#0077B5] to-[#00a0dc] opacity-0 
                      group-hover:opacity-20 blur-md transition-opacity duration-300" />
        
        {/* Border container */}
        <div className="relative p-2 rounded-full border-2 border-gray-200 
                      overflow-hidden transition-colors duration-300
                      group-hover:border-[#0077B5] bg-white">
          <LinkedinIcon />
          
          {/* Inner glow effect */}
          <div className="absolute inset-0 bg-gradient-to-r from-[#0077B5] to-[#00a0dc] opacity-0 
                        group-hover:opacity-10 transition-opacity duration-300" />
        </div>
      </motion.a>
      </div>
      
      
  )
}

================
File: src/components/home/HeroSection/t.txt
================
echo "# bimasha-portfolio" >> README.md
git init
git add .
git commit -m "Initial commit with base portfolio structure"
git branch -M main
git remote add origin https://github.com/1yakub/bimasha-portfolio.git
git push -u origin main
git checkout -b feature/api-style-hero
git add .
git commit -m "Add API-style hero section variant"
git push origin feature/api-style-hero
vercel login
vercel
git checkout main
vercel deploy --prod

================
File: src/components/home/HeroSection/TechStack.tsx
================
'use client'

import { motion } from 'framer-motion'

const techStack = [
  // First row - Primary skills
  { 
    name: 'Laravel',
    color: '#FF2D20',
    icon: '🔸',
    years: 6,
    bgColor: '#FFF5F5',
    primary: true
  },
  { 
    name: 'Next.js',
    color: '#000000',
    icon: '▲',
    years: 3,
    bgColor: '#F8F9FA',
    primary: true
  },
  { 
    name: 'React',
    color: '#61DAFB',
    icon: '⚛️',
    years: 5,
    bgColor: '#F0FBFF',
    primary: true
  },
  // Second row - Supporting skills
  { 
    name: 'TypeScript',
    color: '#3178C6',
    icon: '📘',
    years: 4,
    bgColor: '#EDF2FF'
  },
  { 
    name: 'Node.js',
    color: '#339933',
    icon: '🟢',
    years: 5,
    bgColor: '#F0FFF4'
  },
  { 
    name: 'AWS',
    color: '#FF9900',
    icon: '☁️',
    years: 4,
    bgColor: '#FFFAF0'
  }
]

export default function TechStack() {
  return (
    <motion.div 
      initial={{ opacity: 0 }}
      animate={{ opacity: 1 }}
      transition={{ delay: 1.2 }}
      className="space-y-2" // Gap between rows
    >
      {/* Main skills row */}
      <div className="flex gap-2">
        {techStack.filter(tech => tech.primary).map((tech, i) => (
          <TechBadge key={i} tech={tech} />
        ))}
      </div>

      {/* Supporting skills row */}
      <div className="flex gap-2">
        {techStack.filter(tech => !tech.primary).map((tech, i) => (
          <TechBadge key={i} tech={tech} />
        ))}
      </div>
    </motion.div>
  )
}

// Separated TechBadge component for cleaner code
function TechBadge({ tech }: { tech: any }) {
  return (
    <motion.div 
      className="relative"
      whileHover={{ scale: 1.05 }}
      transition={{
        type: "spring",
        stiffness: 400,
        damping: 17
      }}
    >
      {/* Neo-brutalist tooltip */}
      <motion.div 
        className="pointer-events-none absolute -top-12 left-1/2 -translate-x-1/2 
                  opacity-0 group-hover:opacity-100 transition-opacity duration-300 z-50"
      >
        <div className="relative bg-white border-2 border-black px-3 py-1 text-xs font-medium
                       shadow-[2px_2px_0px_0px_rgba(0,0,0,1)]">
          {tech.years}+ years experience
          <div className="absolute -bottom-2 left-1/2 -translate-x-1/2 
                         w-4 h-4 bg-white border-b-2 border-r-2 border-black 
                         rotate-45 -z-10" />
        </div>
      </motion.div>

      {/* Tech badge */}
      <div 
        className="group px-3 py-1 rounded-full text-sm transition-all duration-300
                   hover:ring-2 hover:ring-opacity-50 relative overflow-hidden"
        style={{
          backgroundColor: tech.bgColor,
          ringColor: tech.color,
          color: tech.color
        }}
      >
        <div className="relative z-10 flex items-center gap-2">
          <span className="text-lg">{tech.icon}</span>
          <span>{tech.name}</span>
        </div>

        <div
          className="absolute inset-0 opacity-0 group-hover:opacity-10 transition-opacity duration-300"
          style={{
            background: tech.color
          }}
        />
      </div>
    </motion.div>
  )
}

================
File: src/components/home/ProjectsGrid.tsx
================
'use client'

import { motion } from 'framer-motion'
import Container from '@/components/ui/container'

const projects = [
  {
    title: "Life Coach Hub",
    description: "Online platform connecting life coaches with clients",
    tags: ["Next.js", "TypeScript", "Tailwind"],
    demoUrl: "#",
    githubUrl: "#",
    image: "/api/placeholder/600/400"
  }
  // Add more projects here
]

export default function ProjectsGrid() {
  return (
    <section className="py-20 bg-[#FFECEC]">
      <Container>
        <div className="space-y-16">
          {/* Section Header */}
          <div className="space-y-4">
            <motion.h2 
              initial={{ opacity: 0, y: 20 }}
              whileInView={{ opacity: 1, y: 0 }}
              viewport={{ once: true }}
              className="text-5xl font-black"
            >
              Featured Projects
            </motion.h2>
          </div>

          {/* Projects Grid */}
          <div className="grid grid-cols-1 gap-8">
            {projects.map((project, index) => (
              <motion.div
                key={index}
                initial={{ opacity: 0, y: 20 }}
                whileInView={{ opacity: 1, y: 0 }}
                viewport={{ once: true }}
                transition={{ delay: index * 0.2 }}
                className="group relative bg-white border-[3px] border-black shadow-[8px_8px_0px_0px_rgba(0,0,0,1)]
                           hover:translate-x-[3px] hover:translate-y-[3px] hover:shadow-none transition-all"
              >
                <div className="grid md:grid-cols-2 gap-6 p-6">
                  {/* Project Image */}
                  <div className="relative aspect-[4/3] bg-gray-100 border-[3px] border-black overflow-hidden">
                    <img 
                      src={project.image}
                      alt={project.title}
                      className="object-cover w-full h-full"
                    />
                  </div>

                  {/* Project Info */}
                  <div className="space-y-6">
                    <div>
                      <h3 className="text-3xl font-bold mb-3">{project.title}</h3>
                      <p className="text-lg text-gray-600">{project.description}</p>
                    </div>

                    {/* Tech Stack */}
                    <div className="flex flex-wrap gap-2">
                      {project.tags.map((tag) => (
                        <span 
                          key={tag}
                          className="px-3 py-1 bg-black text-white text-sm font-bold"
                        >
                          {tag}
                        </span>
                      ))}
                    </div>

                    {/* Links */}
                    <div className="flex gap-4">
                      <a 
                        href={project.demoUrl}
                        className="px-6 py-2 bg-blue-600 text-white font-bold border-2 border-black
                                 hover:bg-blue-700 transition-colors"
                      >
                        Demo
                      </a>
                      <a 
                        href={project.githubUrl}
                        className="px-6 py-2 bg-black text-white font-bold border-2 border-black
                                 hover:bg-gray-800 transition-colors"
                      >
                        GitHub
                      </a>
                    </div>
                  </div>
                </div>
              </motion.div>
            ))}
          </div>
        </div>
      </Container>
    </section>
  )
}

================
File: src/components/home/SkillsMatrix.tsx
================
'use client'

import { motion } from 'framer-motion'

interface Skill {
  category: string
  items: {
    name: string
    level: number // 1-5
  }[]
}

const skills: Skill[] = [
  {
    category: 'Frontend',
    items: [
      { name: 'React/Next.js', level: 5 },
      { name: 'TypeScript', level: 5 },
      { name: 'Tailwind CSS', level: 4 }
    ]
  },
  {
    category: 'Backend',
    items: [
      { name: 'Node.js', level: 4 },
      { name: 'Python', level: 4 },
      { name: 'REST APIs', level: 5 }
    ]
  }
]

export default function SkillsMatrix() {
  return (
    <section className="py-20">
      <div className="max-w-6xl mx-auto px-4">
        <h2 className="text-4xl font-bold mb-12">Technical Skills</h2>
        <div className="grid grid-cols-1 md:grid-cols-2 gap-8">
          {skills.map((category, idx) => (
            <motion.div
              key={category.category}
              initial={{ opacity: 0, x: idx % 2 === 0 ? -20 : 20 }}
              animate={{ opacity: 1, x: 0 }}
              className="bg-card p-6 rounded-lg shadow-lg"
            >
              <h3 className="text-2xl font-semibold mb-4">{category.category}</h3>
              <div className="space-y-4">
                {category.items.map((skill) => (
                  <div key={skill.name} className="space-y-2">
                    <div className="flex justify-between">
                      <span>{skill.name}</span>
                      <span className="text-muted-foreground">
                        {skill.level}/5
                      </span>
                    </div>
                    <div className="h-2 bg-secondary rounded-full">
                      <motion.div
                        initial={{ width: 0 }}
                        animate={{ width: `${(skill.level / 5) * 100}%` }}
                        className="h-full bg-primary rounded-full"
                      />
                    </div>
                  </div>
                ))}
              </div>
            </motion.div>
          ))}
        </div>
      </div>
    </section>
  )
}

================
File: src/components/layout/Footer.tsx
================
export default function Footer() {
    return (
      <footer className="bg-background py-12">
        <div className="max-w-6xl mx-auto px-4">
          <div className="grid grid-cols-1 md:grid-cols-3 gap-8">
            <div>
              <h3 className="font-bold mb-4">Contact</h3>
              <p className="text-muted-foreground">email@example.com</p>
            </div>
            <div>
              <h3 className="font-bold mb-4">Social</h3>
              <div className="space-y-2">
                <a href="#" className="block text-muted-foreground hover:text-primary">GitHub</a>
                <a href="#" className="block text-muted-foreground hover:text-primary">LinkedIn</a>
              </div>
            </div>
            <div>
              <h3 className="font-bold mb-4">Newsletter</h3>
              <p className="text-muted-foreground mb-4">Subscribe for updates</p>
            </div>
          </div>
        </div>
      </footer>
    )
  }

================
File: src/components/layout/Header.tsx
================
'use client'

import Link from 'next/link'
import Container from '@/components/ui/container'

export default function Header() {
  return (
    <header className="fixed w-full bg-white z-50">
      <Container>
        <nav className="h-16 flex items-center justify-between border-b-[3px] border-black"> {/* Changed from h-20 to h-16 */}
          <Link href="/" className="text-2xl font-black">
            BIMASHA
          </Link>
          
          <div className="flex items-center gap-4">
            <Link href="/projects" className="font-medium">
              Projects
            </Link>
            <Link 
              href="/newsletter" 
              className="px-4 py-2 bg-black text-white font-medium"
            >
              Newsletter
            </Link>
          </div>
        </nav>
      </Container>
    </header>
  )
}

================
File: src/components/layout/NewsletterSidebar.tsx
================
'use client'

import { useState } from 'react'
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card'
import { Input } from '@/components/ui/input'
import { Button } from '@/components/ui/button'

export default function NewsletterSidebar() {
  const [email, setEmail] = useState('')

  return (
    <Card className="fixed right-4 bottom-4 w-80">
      <CardHeader>
        <CardTitle>Subscribe to Newsletter</CardTitle>
      </CardHeader>
      <CardContent>
        <form className="space-y-4">
          <Input
            type="email"
            placeholder="Enter your email"
            value={email}
            onChange={(e) => setEmail(e.target.value)}
          />
          <Button type="submit" className="w-full">Subscribe</Button>
        </form>
      </CardContent>
    </Card>
  )
}

================
File: src/components/shared/ContactForm.tsx
================
'use client'

import { useState } from 'react'
import { Button } from '@/components/ui/button'
import { Input } from '@/components/ui/input'
import { Textarea } from '@/components/ui/textarea'

export function ContactForm() {
  const [formData, setFormData] = useState({
    name: '',
    email: '',
    message: ''
  })

  return (
    <form className="space-y-6">
      <div>
        <Input 
          placeholder="Name"
          value={formData.name}
          onChange={e => setFormData(prev => ({ ...prev, name: e.target.value }))}
        />
      </div>
      <div>
        <Input 
          type="email"
          placeholder="Email"
          value={formData.email}
          onChange={e => setFormData(prev => ({ ...prev, email: e.target.value }))}
        />
      </div>
      <div>
        <Textarea 
          placeholder="Message"
          value={formData.message}
          onChange={e => setFormData(prev => ({ ...prev, message: e.target.value }))}
        />
      </div>
      <Button type="submit" className="w-full">Send Message</Button>
    </form>
  )
}

================
File: src/components/shared/CustomCursor.tsx
================
'use client'

import { useEffect, useState } from 'react'
import { motion } from 'framer-motion'

export default function CustomCursor() {
  const [position, setPosition] = useState({ x: 0, y: 0 })
  const [isPointer, setIsPointer] = useState(false)

  useEffect(() => {
    const updatePosition = (e: MouseEvent) => {
      // Direct position update without animation for native feel
      const cursor = document.getElementById('custom-cursor')
      if (cursor) {
        cursor.style.transform = `translate(${e.clientX - 8}px, ${e.clientY - 8}px)`
      }
    }

    const updateCursorType = (e: MouseEvent) => {
      const hoveredElement = document.elementFromPoint(e.clientX, e.clientY)
      setIsPointer(
        window.getComputedStyle(hoveredElement || document.body).cursor === 'pointer'
      )
    }

    window.addEventListener('mousemove', updatePosition)
    window.addEventListener('mousemove', updateCursorType)

    return () => {
      window.removeEventListener('mousemove', updatePosition)
      window.removeEventListener('mousemove', updateCursorType)
    }
  }, [])

  return (
    <div 
      id="custom-cursor"
      className="fixed top-0 left-0 w-4 h-4 pointer-events-none z-[9999]"
      style={{ transform: `translate(${position.x}px, ${position.y}px)` }}
    >
      <motion.div
        className="w-full h-full bg-blue-600 rounded-full"
        animate={{
          scale: isPointer ? 1.5 : 1
        }}
        transition={{
          scale: {
            type: "spring",
            stiffness: 300,
            damping: 25
          }
        }}
      />
    </div>
  )
}

================
File: src/components/shared/icons/index.tsx
================
export const GithubIcon = () => (
    <svg viewBox="0 0 24 24" width="20" height="20" stroke="currentColor" fill="none" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round">
      <path d="M9 19c-5 1.5-5-2.5-7-3m14 6v-3.87a3.37 3.37 0 0 0-.94-2.61c3.14-.35 6.44-1.54 6.44-7A5.44 5.44 0 0 0 20 4.77 5.07 5.07 0 0 0 19.91 1S18.73.65 16 2.48a13.38 13.38 0 0 0-7 0C6.27.65 5.09 1 5.09 1A5.07 5.07 0 0 0 5 4.77a5.44 5.44 0 0 0-1.5 3.78c0 5.42 3.3 6.61 6.44 7A3.37 3.37 0 0 0 9 18.13V22"></path>
    </svg>
  )
  
  export const LinkedinIcon = () => (
    <svg viewBox="0 0 24 24" width="20" height="20" stroke="currentColor" fill="none" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round">
      <path d="M16 8a6 6 0 0 1 6 6v7h-4v-7a2 2 0 0 0-2-2 2 2 0 0 0-2 2v7h-4v-7a6 6 0 0 1 6-6z"></path>
      <rect x="2" y="9" width="4" height="12"></rect>
      <circle cx="4" cy="4" r="2"></circle>
    </svg>
  )

================
File: src/components/shared/NewsletterForm.tsx
================
'use client'

import { useState } from 'react'
import { Button } from '@/components/ui/button'
import { Input } from '@/components/ui/input'

export function NewsletterForm() {
  const [email, setEmail] = useState('')

  return (
    <form className="space-y-4">
      <Input
        type="email"
        placeholder="Enter your email"
        value={email}
        onChange={(e) => setEmail(e.target.value)}
      />
      <Button type="submit" className="w-full">Subscribe to Updates</Button>
    </form>
  )
}

================
File: src/components/shared/ProjectCard.tsx
================
interface Project {
    id: string
    title: string
    description: string
    image: string
    tags: string[]
    demoUrl: string
    githubUrl: string
  }
  
  export function ProjectCard({ project }: { project: Project }) {
    return (
      <div className="bg-card rounded-lg overflow-hidden shadow-lg">
        <div className="aspect-video relative bg-muted">
          <div className="absolute inset-0 flex items-center justify-center">
            {/* Image placeholder */}
            <span className="text-muted-foreground">Project Image</span>
          </div>
        </div>
        <div className="p-6">
          <h3 className="text-xl font-semibold mb-2">{project.title}</h3>
          <p className="text-muted-foreground mb-4">{project.description}</p>
          <div className="flex flex-wrap gap-2 mb-4">
            {project.tags.map(tag => (
              <span key={tag} className="px-2 py-1 bg-secondary rounded text-sm">
                {tag}
              </span>
            ))}
          </div>
          <div className="flex gap-4">
            <a href={project.demoUrl} className="text-primary hover:underline">Demo</a>
            <a href={project.githubUrl} className="text-primary hover:underline">GitHub</a>
          </div>
        </div>
      </div>
    )
  }

================
File: src/components/ui/card.tsx
================
import * as React from "react";

const Card = React.forwardRef<
  HTMLDivElement,
  React.HTMLAttributes<HTMLDivElement>
>(({ className, ...props }, ref) => (
  <div
    ref={ref}
    className={`rounded-lg border bg-card text-card-foreground shadow-sm ${className}`}
    {...props}
  />
));
Card.displayName = "Card";

const CardHeader = React.forwardRef<
  HTMLDivElement,
  React.HTMLAttributes<HTMLDivElement>
>(({ className, ...props }, ref) => (
  <div
    ref={ref}
    className={`flex flex-col space-y-1.5 p-6 ${className}`}
    {...props}
  />
));
CardHeader.displayName = "CardHeader";

const CardTitle = React.forwardRef<
  HTMLParagraphElement,
  React.HTMLAttributes<HTMLHeadingElement>
>(({ className, ...props }, ref) => (
  <h3
    ref={ref}
    className={`text-2xl font-semibold leading-none tracking-tight ${className}`}
    {...props}
  />
));
CardTitle.displayName = "CardTitle";

const CardDescription = React.forwardRef<
  HTMLParagraphElement,
  React.HTMLAttributes<HTMLParagraphElement>
>(({ className, ...props }, ref) => (
  <p
    ref={ref}
    className={`text-sm text-muted-foreground ${className}`}
    {...props}
  />
));
CardDescription.displayName = "CardDescription";

const CardContent = React.forwardRef<
  HTMLDivElement,
  React.HTMLAttributes<HTMLDivElement>
>(({ className, ...props }, ref) => (
  <div ref={ref} className={`p-6 pt-0 ${className}`} {...props} />
));
CardContent.displayName = "CardContent";

export { Card, CardHeader, CardTitle, CardDescription, CardContent };

================
File: src/components/ui/container.tsx
================
export default function Container({ children }: { children: React.ReactNode }) {
    return (
      <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        {children}
      </div>
    )
  }

================
File: src/lib/analytics.ts
================
type AnalyticsEvent = {
    name: string;
    properties?: Record<string, any>;
    timestamp?: number;
  }
  
  export const analytics = {
    trackPageView: (path: string) => {
      const event: AnalyticsEvent = {
        name: 'page_view',
        properties: { path },
        timestamp: Date.now()
      }
      console.log('Track:', event)
    },
  
    trackEvent: (name: string, properties?: Record<string, any>) => {
      const event: AnalyticsEvent = {
        name,
        properties,
        timestamp: Date.now()
      }
      console.log('Track:', event)
    }
  }

================
File: src/lib/constants.ts
================
export const SITE_CONFIG = {
    title: 'Bimasha Portfolio',
    description: 'Senior Software Engineer Portfolio',
    social: {
      github: 'https://github.com/username',
      linkedin: 'https://linkedin.com/in/username'
    }
  }
  
  export const CONTACT_CONFIG = {
    email: 'email@example.com'
  }

================
File: src/lib/newsletter.ts
================
interface SubscribeResponse {
    success: boolean;
    message: string;
  }
  
  export const newsletter = {
    subscribe: async (email: string): Promise<SubscribeResponse> => {
      // Add newsletter subscription logic
      return {
        success: true,
        message: 'Successfully subscribed!'
      }
    }
  }

================
File: src/types/index.tsmkdir
================
export interface Project {
  id: string
  title: string
  description: string
  image: string
  tags: string[]
  demoUrl: string
  githubUrl: string
  content?: string
  metrics?: {
    label: string
    value: string
  }[]
}

export interface CaseStudy {
  title: string
  description: string
  content: string
  metrics: string[]
  slug: string
  date: string
  tags: string[]
}

export interface Skill {
  category: string
  items: {
    name: string
    level: number // 1-5
    description?: string
  }[]
}

export interface ContactFormData {
  name: string
  email: string
  message: string
}

export interface NewsletterSubscriber {
  email: string
  subscribedAt: Date
  status: 'active' | 'inactive'
}

================
File: src/utils/animations.ts
================
export const fadeUpVariant = {
    hidden: { opacity: 0, y: 20 },
    visible: { 
      opacity: 1, 
      y: 0,
      transition: { duration: 0.5 }
    }
  }
  
  export const fadeInVariant = {
    hidden: { opacity: 0 },
    visible: { 
      opacity: 1,
      transition: { duration: 0.5 }
    }
  }
  
  export const letterVariants = {
    hidden: { opacity: 0, y: 50 },
    visible: (i: number) => ({
      opacity: 1,
      y: 0,
      transition: {
        delay: i * 0.1,
      },
    }),
  }

================
File: tailwind.config.ts
================
import type { Config } from "tailwindcss";

const config: Config = {
  content: [
    "./src/pages/**/*.{js,ts,jsx,tsx,mdx}",
    "./src/components/**/*.{js,ts,jsx,tsx,mdx}",
    "./src/app/**/*.{js,ts,jsx,tsx,mdx}",
  ],
  theme: {
    extend: {
      colors: {
        background: "#FFF0F3",  // Light pink background
        primary: "#FF2E63",     // Dark pink accent
        secondary: "#252A34",   // Dark shade for text
        accent: "#FF2E63",      // Same as primary for consistency
      },
    },
  },
  plugins: [],
};

export default config;

================
File: tsconfig.json
================
{
  "compilerOptions": {
    "target": "ES2017",
    "lib": ["dom", "dom.iterable", "esnext"],
    "allowJs": true,
    "skipLibCheck": true,
    "strict": true,
    "noEmit": true,
    "esModuleInterop": true,
    "module": "esnext",
    "moduleResolution": "bundler",
    "resolveJsonModule": true,
    "isolatedModules": true,
    "jsx": "preserve",
    "incremental": true,
    "plugins": [
      {
        "name": "next"
      }
    ],
    "paths": {
      "@/*": ["./src/*"]
    }
  },
  "include": ["next-env.d.ts", "**/*.ts", "**/*.tsx", ".next/types/**/*.ts"],
  "exclude": ["node_modules"]
}
